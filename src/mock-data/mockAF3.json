{
  "pages": [
    {
      "name": "underwriting",
      "step": {},
      "components": [
        {
          "id": "7aa23968-20b5-4f48-a579-3d14b293aa87",
          "type": "$TITLE",
          "dependencies": [],
          "data": {
            "text": "Underwriting Questions"
          },
          "formData": {},
          "children": []
        },
        {
          "id": "95ace9fe-1a7a-4d2f-935e-a5853bd5f718",
          "type": "$CUSTOM",
          "dependencies": [],
          "data": {
            "component": "$UNDERWRITING"
          },
          "formData": {},
          "children": []
        }
      ]
    },
    {
      "name": "customize",
      "step": {},
      "components": [
        {
          "id": "724dc9d4-916a-40ae-af3f-59a89d96bb87",
          "type": "$TITLE",
          "dependencies": [],
          "data": {
            "text": "Customize Quote"
          },
          "formData": {},
          "children": []
        },
        {
          "id": "d3729808-475e-4ac9-8771-054971a2fb57",
          "type": "$CUSTOM",
          "dependencies": [],
          "data": {
            "component": "$INFO"
          },
          "formData": {},
          "children": []
        },
        {
          "id": "a1729809-8376-4fed-aa2b-47e26ecbab22",
          "type": "$CUSTOM",
          "dependencies": [],
          "data": {
            "component": "$SLIDER_GROUP",
            "extendedProperties": {
              "primaryField": {
                "name": "coverageLimits.building.value",
                "label": "Building Limit",
                "min": "coverageLimits.building.minAmount",
                "max": "coverageLimits.building.maxAmount",
                "hint": "Bacon ipsum dolor amet filet mignon fatback chuck turducken, turkey jowl swine bacon spare ribs brisket beef. Spare ribs alcatra picanha pastrami pancetta boudin brisket frankfurter meatloaf."
              },
              "secondaryField": {
                "name": "coverageLimits.personalProperty.value",
                "label": "Personal Property",
                "hint": "Bacon ipsum dolor amet spare ribs prosciutto pig, pork loin turkey kielbasa beef cow drumstick ham tri-tip corned beef. Cupim tri-tip chicken tenderloin, ham hock cow spare ribs swine. Drumstick shank jerky rump jowl."
              },
              "subscribe": true
            }
          },
          "formData": {},
          "children": []
        },
        {
          "id": "651e1469-f68c-4680-8aae-b63f5811708a",
          "type": "$INPUT",
          "path": "coverageOptions.personalPropertyReplacementCost.answer",
          "dependencies": [{ "pprcc": true }],
          "data": {
            "component": "switch",
            "label": "Personal Property Replacement Cost",
            "size": "12",
            "hint": "Meatball t-bone ball tip shank cupim beef doner swine. Pork belly cow beef ribs sirloin ham, spare ribs capicola drumstick jowl corned beef landjaeger meatloaf."
          },
          "formData": {
            "path": "coverageOptions.personalPropertyReplacementCost.answer",
            "type": "boolean",
            "required": true,
            "metaData": {}
          },
          "children": []
        },
        {
          "id": "1b8f3ea8-ad64-4c00-9c8c-3caa9c85a1a6",
          "type": "$INPUT",
          "path": "deductibles.buildingDeductible.value",
          "dependencies": [],
          "data": {
            "segmented": true,
            "component": "radio",
            "label": "Deductible",
            "size": "12",
            "hint": "Bacon ipsum dolor amet picanha frankfurter flank drumstick pastrami short loin pork chop corned beef. Short loin meatball drumstick turducken bresaola porchetta turkey ball tip chuck bacon frankfurter. Ribeye sirloin short ribs pork chop swine salami strip steak leberkas landjaeger cow cupim tail.",
            "dataSource": [
              {
                "answer": 500,
                "label": "$500"
              },
              {
                "answer": 1000,
                "label": "$1,000"
              },
              {
                "answer": 2000,
                "label": "$2,000"
              },
              {
                "answer": 5000,
                "label": "$5,000"
              },
              {
                "answer": 10000,
                "label": "$10,000"
              }
            ],
            "extendedProperties": {}
          },
          "formData": {
            "path": "deductibles.buildingDeductible.value",
            "type": "integer",
            "required": true,
            "metaData": {}
          },
          "children": []
        }
      ]
    },
    {
      "name": "customerInfo",
      "step": {},
      "components": [
        {
          "id": 1,
          "type": "$TITLE",
          "dependencies": [],
          "data": {
            "text": "Save Quote"
          },
          "formData": {},
          "children": []
        },
        {
          "id": "d3729808-475e-4ac9-8771-054971a2fb57",
          "type": "$CUSTOM",
          "dependencies": [],
          "data": {
            "component": "$INFO"
          },
          "formData": {},
          "children": []
        },
        {
          "id": 3,
          "type": "$INPUT",
          "dependencies": [],
          "path": "policyHolders[0].firstName",
          "data": {
            "component": "text",
            "label": "First Name",
            "size": "5",
            "validation": ["isValidNameFormat"]
          },
          "formData": {
            "path": "policyHolders.policyHolder.firstName",
            "type": "string",
            "required": true,
            "metaData": {
              "minLength": 1,
              "maxLength": 255
            }
          },
          "children": []
        },
        {
          "id": 4,
          "type": "$INPUT",
          "path": "policyHolders[0].lastName",
          "dependencies": [],
          "data": {
            "component": "text",
            "label": "Last Name",
            "size": "7",
            "validation": ["isValidNameFormat"]
          },
          "formData": {
            "path": "policyHolders.policyHolder.lastName",
            "type": "string",
            "required": true,
            "metaData": {
              "minLength": 1,
              "maxLength": 255
            }
          },
          "children": []
        },
        {
          "id": 5,
          "type": "$INPUT",
          "path": "policyHolders[0].emailAddress",
          "dependencies": [],
          "data": {
            "component": "text",
            "label": "Email Address",
            "size": "8",
            "validation": ["isEmail"]
          },
          "formData": {
            "path": "policyHolders.policyHolder.emailAddress",
            "type": "string",
            "required": true,
            "metaData": {
              "minLength": 1,
              "maxLength": 255
            }
          },
          "children": []
        },
        {
          "id": 6,
          "type": "$INPUT",
          "path": "policyHolders[0].primaryPhoneNumber",
          "dependencies": [],
          "data": {
            "component": "phone",
            "label": "Contact Phone",
            "size": "4",
            "validation": ["isPhone"]
          },
          "formData": {
            "path": "policyHolders.policyHolder.primaryPhoneNumber",
            "type": "string",
            "required": true,
            "metaData": {
              "pattern": "^(+d{1,2}s)?(?d{3})?[s.-]d{3}[s.-]d{4}$"
            }
          },
          "children": []
        },
        {
          "id": 8,
          "type": "$INPUT",
          "path": "additionalPolicyholder",
          "dependencies": [],
          "data": {
            "component": "switch",
            "label": "Do you want to add an additional Policyholder?"
          },
          "formData": {},
          "children": []
        },
        {
          "id": 3453,
          "type": "$SECTION",
          "dependencies": [{ "additionalPolicyholder": true }],
          "data": {},
          "formData": {},
          "children": [
            {
              "id": 7,
              "type": "$TITLE",
              "dependencies": [],
              "data": {
                "text": "Secondary Policyholder",
                "icon": "fa fa-user-circle",
                "children": []
              },
              "formData": {},
              "children": []
            },
            {
              "id": 10,
              "type": "$INPUT",
              "path": "policyHolders[1].firstName",
              "dependencies": [],
              "data": {
                "component": "text",
                "label": "First Name",
                "size": "5",
                "validation": ["isValidNameFormat"]
              },
              "formData": {
                "path": "policyHolders.policyHolder.firstName",
                "type": "string",
                "required": true,
                "metaData": {
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "children": []
            },
            {
              "id": 11,
              "type": "$INPUT",
              "path": "policyHolders[1].lastName",
              "dependencies": [],
              "data": {
                "component": "text",
                "label": "Last Name",
                "size": "7",
                "validation": ["isValidNameFormat"]
              },
              "formData": {
                "path": "policyHolders.policyHolder.lastName",
                "type": "string",
                "required": true,
                "metaData": {
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "children": []
            },
            {
              "id": 12,
              "type": "$INPUT",
              "path": "policyHolders[1].emailAddress",
              "dependencies": [],
              "data": {
                "component": "text",
                "label": "Email Address",
                "size": "8",
                "validation": ["isEmail"]
              },
              "formData": {
                "path": "policyHolders.policyHolder.emailAddress",
                "type": "string",
                "required": true,
                "metaData": {
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "children": []
            },
            {
              "id": 13,
              "type": "$INPUT",
              "path": "policyHolders[1].primaryPhoneNumber",
              "dependencies": [],
              "data": {
                "component": "phone",
                "label": "Contact Phone",
                "size": "4",
                "validation": ["isPhone"]
              },
              "formData": {
                "path": "policyHolders.policyHolder.primaryPhoneNumber",
                "type": "string",
                "required": true,
                "metaData": {
                  "pattern": "^(+d{1,2}s)?(?d{3})?[s.-]d{3}[s.-]d{4}$"
                }
              },
              "children": []
            }
          ]
        },
        {
          "id": 3453111,
          "type": "$TITLE",
          "dependencies": [],
          "data": {
            "text": "Policy Details",
            "icon": "fa fa-file-text"
          },
          "formData": {},
          "children": []
        },
        {
          "id": 15,
          "type": "$INPUT",
          "path": "effectiveDate",
          "dependencies": [],
          "data": {
            "component": "date",
            "label": "Effective Date",
            "size": "6",
            "extendedProperties": {
              "min": "zipCodeSettings.minEffectiveDate",
              "max": "zipCodeSettings.maxEffectiveDate"
            },
            "validation": ["minEffectiveDate", "isValidDate"]
          },
          "formData": {
            "path": "effectiveDate",
            "type": "string",
            "required": true,
            "metaData": {
              "format": "date-time"
            }
          },
          "children": []
        },
        {
          "id": 16,
          "type": "$INPUT",
          "path": "agentCode",
          "dependencies": [],
          "data": {
            "component": "selectInteger",
            "label": "Agent",
            "size": "6",
            "dataSource": "agents"
          },
          "formData": {
            "path": "agentCode",
            "type": "integer",
            "required": true,
            "metaData": {}
          },
          "children": []
        }
      ]
    },
    {
      "name": "share",
      "step": {},
      "components": [
        {
          "id": 1,
          "type": "$CUSTOM",
          "dependencies": [],
          "data": {
            "extendedProperties": {
              "subscribe": true
            },
            "component": "$SHARE"
          },
          "formData": {},
          "children": []
        }
      ]
    }
  ]
}
